{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nexport class RedTeamComponent {\n  constructor() {\n    this.redTeamItem = [{\n      \"title\": \"Introduction\",\n      \"desc\": \"In the world of computers, there's a constant game between the good guys and the bad guys. Just like in a game of tag, the bad guys try to find ways to break into computer systems, and the good guys work hard to stop them. As the bad guys come up with new tricks, the good guys have to come up with new ways to protect against them. Sometimes, we use tests to check if our computers are safe from the bad guys. These tests are like quizzes for our computers. They help us find weaknesses in our defenses. But sometimes, these tests don't show us everything the bad guys could do. So they might not be enough to prepare us for a real attack from someone who's really determined to break in.\"\n    }, {\n      \"title\": \"Vulnerability assessments\",\n      \"desc\": \"In the world of computers, there's a constant game between the good guys and the bad guys. Just like in a game of tag, the bad guys try to find ways to break into computer systems, and the good guys work hard to stop them. As the bad guys come up with new tricks, the good guys have to come up with new ways to protect against them. Sometimes, we use tests to check if our computers are safe from the bad guys. These tests are like quizzes for our computers. They help us find weaknesses in our defenses. But sometimes, these tests don't show us everything the bad guys could do. So they might not be enough to prepare us for a real attack from someone who's really determined to break in.\"\n    }, {\n      \"title\": \"Penetration Testing:\",\n      \"desc\": \"In the world of computers, there's a constant game between the good guys and the bad guys. Just like in a game of tag, the bad guys try to find ways to break into computer systems, and the good guys work hard to stop them. As the bad guys come up with new tricks, the good guys have to come up with new ways to protect against them. Sometimes, we use tests to check if our computers are safe from the bad guys. These tests are like quizzes for our computers. They help us find weaknesses in our defenses. But sometimes, these tests don't show us everything the bad guys could do. So they might not be enough to prepare us for a real attack from someone who's really determined to break in.\"\n    }, {\n      \"title\": \"Advanced Persistent Threats and why Regular Pentesting is not enough:\",\n      \"desc\": \"In the world of computers, there's a constant game between the good guys and the bad guys. Just like in a game of tag, the bad guys try to find ways to break into computer systems, and the good guys work hard to stop them. As the bad guys come up with new tricks, the good guys have to come up with new ways to protect against them. Sometimes, we use tests to check if our computers are safe from the bad guys. These tests are like quizzes for our computers. They help us find weaknesses in our defenses. But sometimes, these tests don't show us everything the bad guys could do. So they might not be enough to prepare us for a real attack from someone who's really determined to break in.\"\n    }, {\n      \"title\": \"Red team Engagements:\",\n      \"desc\": \"In the world of computers, there's a constant game between the good guys and the bad guys. Just like in a game of tag, the bad guys try to find ways to break into computer systems, and the good guys work hard to stop them. As the bad guys come up with new tricks, the good guys have to come up with new ways to protect against them. Sometimes, we use tests to check if our computers are safe from the bad guys. These tests are like quizzes for our computers. They help us find weaknesses in our defenses. But sometimes, these tests don't show us everything the bad guys could do. So they might not be enough to prepare us for a real attack from someone who's really determined to break in.\"\n    }, {\n      \"title\": \"Teams and Functions of an engagments:\",\n      \"desc\": \"In the world of computers, there's a constant game between the good guys and the bad guys. Just like in a game of tag, the bad guys try to find ways to break into computer systems, and the good guys work hard to stop them. As the bad guys come up with new tricks, the good guys have to come up with new ways to protect against them. Sometimes, we use tests to check if our computers are safe from the bad guys. These tests are like quizzes for our computers. They help us find weaknesses in our defenses. But sometimes, these tests don't show us everything the bad guys could do. So they might not be enough to prepare us for a real attack from someone who's really determined to break in.\"\n    }, {\n      \"title\": \"\",\n      \"desc\": \"In the world of computers, there's a constant game between the good guys and the bad guys. Just like in a game of tag, the bad guys try to find ways to break into computer systems, and the good guys work hard to stop them. As the bad guys come up with new tricks, the good guys have to come up with new ways to protect against them. Sometimes, we use tests to check if our computers are safe from the bad guys. These tests are like quizzes for our computers. They help us find weaknesses in our defenses. But sometimes, these tests don't show us everything the bad guys could do. So they might not be enough to prepare us for a real attack from someone who's really determined to break in.\"\n    }];\n  }\n  static #_ = this.ɵfac = function RedTeamComponent_Factory(t) {\n    return new (t || RedTeamComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RedTeamComponent,\n    selectors: [[\"app-red-team\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 62,\n    vars: 0,\n    consts: [[1, \"container\"], [1, \"parent-margin\"], [\"id\", \"accordionFlushExample\", 1, \"accordion\", \"accordion-flush\"], [1, \"accordion-item\"], [\"id\", \"flush-headingOne\", 1, \"accordion-header\"], [\"type\", \"button\", \"data-bs-toggle\", \"collapse\", \"data-bs-target\", \"#flush-collapseOne\", \"aria-expanded\", \"false\", \"aria-controls\", \"flush-collapseOne\", 1, \"accordion-button\", \"collapsed\"], [\"id\", \"flush-collapseOne\", \"aria-labelledby\", \"flush-headingOne\", \"data-bs-parent\", \"#accordionFlushExample\", 1, \"accordion-collapse\", \"collapse\"], [1, \"accordion-body\"], [\"id\", \"flush-headingTwo\", 1, \"accordion-header\"], [\"type\", \"button\", \"data-bs-toggle\", \"collapse\", \"data-bs-target\", \"#flush-collapseTwo\", \"aria-expanded\", \"false\", \"aria-controls\", \"flush-collapseTwo\", 1, \"accordion-button\", \"collapsed\"], [\"id\", \"flush-collapseTwo\", \"aria-labelledby\", \"flush-headingTwo\", \"data-bs-parent\", \"#accordionFlushExample\", 1, \"accordion-collapse\", \"collapse\"], [\"src\", \"../../../assets/images/image.png\", \"alt\", \"\", 1, \"img-fluid\"], [\"id\", \"flush-headingThree\", 1, \"accordion-header\"], [\"type\", \"button\", \"data-bs-toggle\", \"collapse\", \"data-bs-target\", \"#flush-collapseThree\", \"aria-expanded\", \"false\", \"aria-controls\", \"flush-collapseThree\", 1, \"accordion-button\", \"collapsed\"], [\"id\", \"flush-collapseThree\", \"aria-labelledby\", \"flush-headingThree\", \"data-bs-parent\", \"#accordionFlushExample\", 1, \"accordion-collapse\", \"collapse\"], [\"src\", \"../../../assets/images/penetrationTesting.png\", \"alt\", \"\", 1, \"img-fluid\"], [\"id\", \"flush-headingFour\", 1, \"accordion-header\"], [\"type\", \"button\", \"data-bs-toggle\", \"collapse\", \"data-bs-target\", \"#flush-collapseFour\", \"aria-expanded\", \"false\", \"aria-controls\", \"flush-collapseFour\", 1, \"accordion-button\", \"collapsed\"], [\"id\", \"flush-collapseFour\", \"aria-labelledby\", \"flush-headingFour\", \"data-bs-parent\", \"#accordionFlushExample\", 1, \"accordion-collapse\", \"collapse\"], [\"id\", \"flush-headingFive\", 1, \"accordion-header\"], [\"type\", \"button\", \"data-bs-toggle\", \"collapse\", \"data-bs-target\", \"#flush-collapseFive\", \"aria-expanded\", \"false\", \"aria-controls\", \"flush-collapseFive\", 1, \"accordion-button\", \"collapsed\"], [\"id\", \"flush-collapseFive\", \"aria-labelledby\", \"flush-headingFive\", \"data-bs-parent\", \"#accordionFlushExample\", 1, \"accordion-collapse\", \"collapse\"], [\"id\", \"flush-headingSix\", 1, \"accordion-header\"], [\"type\", \"button\", \"data-bs-toggle\", \"collapse\", \"data-bs-target\", \"#flush-collapseSix\", \"aria-expanded\", \"false\", \"aria-controls\", \"flush-collapseSix\", 1, \"accordion-button\", \"collapsed\"], [\"id\", \"flush-collapseSix\", \"aria-labelledby\", \"flush-headingSix\", \"data-bs-parent\", \"#accordionFlushExample\", 1, \"accordion-collapse\", \"collapse\"], [\"id\", \"flush-headingSeven\", 1, \"accordion-header\"], [\"type\", \"button\", \"data-bs-toggle\", \"collapse\", \"data-bs-target\", \"#flush-collapseSeven\", \"aria-expanded\", \"false\", \"aria-controls\", \"flush-collapseSeven\", 1, \"accordion-button\", \"collapsed\"], [\"id\", \"flush-collapseSeven\", \"aria-labelledby\", \"flush-headingSeven\", \"data-bs-parent\", \"#accordionFlushExample\", 1, \"accordion-collapse\", \"collapse\"]],\n    template: function RedTeamComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h2\", 4)(5, \"button\", 5);\n        i0.ɵɵtext(6, \" Introduction: \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"div\", 6)(8, \"div\", 7);\n        i0.ɵɵtext(9, \" In the world of computers, there's a constant game between the good guys and the bad guys. Just like in a game of tag, the bad guys try to find ways to break into computer systems, and the good guys work hard to stop them. As the bad guys come up with new tricks, the good guys have to come up with new ways to protect against them. Sometimes, we use tests to check if our computers are safe from the bad guys. These tests are like quizzes for our computers. They help us find weaknesses in our defenses. But sometimes, these tests don't show us everything the bad guys could do. So they might not be enough to prepare us for a real attack from someone who's really determined to break in. \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(10, \"div\", 3)(11, \"h2\", 8)(12, \"button\", 9);\n        i0.ɵɵtext(13, \" Vulnerability assessments \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"div\", 10)(15, \"div\", 7);\n        i0.ɵɵtext(16, \"This is the simplest form of security assessment, and its main objective is to identify as much vulnerability in as many systems in the network as possible. To this end, concessions may be made to meet this goal effectively. For example, the attacker's machine may be allowed listed on the available security solutions to avoid interfering with the vulnerability discovery process. This makes sense since the objective is to look at every host on the network and evaluate its security posture individually while providing the most information to the company about where to focus its remediation efforts. In simple words, a vulnerability check looks at each computer by itself to find problems. This helps us figure out what needs fixing first to keep our network safe from bad guys. We mostly use tools that do this automatically, so anyone can do it without needing to know a lot about computers..\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"img\", 11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"div\", 3)(19, \"h2\", 12)(20, \"button\", 13);\n        i0.ɵɵtext(21, \" Penetration Testing: \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(22, \"div\", 14)(23, \"div\", 7);\n        i0.ɵɵtext(24, \"On top of scanning every single host for vulnerabilities, we often need to understand how they impact our network as a whole. Penetration tests add to vulnerability assessments by allowing the pentester to explore the impact of an attacker on the overall network by doing additional steps that include: Trying to take advantage of the weaknesses found on each system is crucial. Sometimes, a weakness might be there, but other protections stop it from being used by bad actors. This also helps us check if we can use the found weaknesses to get into a particular computer. After breaking into a computer, we do more tasks to see if we can get any useful information from it or if we can use it to get into other computers that we couldn't reach before. Penetration tests might start by scanning for vulnerabilities just as a regular vulnerability assessment but provide further information on how an attacker can chain vulnerabilities to achieve specific goals. While its focus remains on identifying vulnerabilities and establishing measures to protect the network, it also considers the network as a whole ecosystem and how an attacker could profit from interactions between its components. By analyzing how an attacker could move around our network, we also gain a basic insight on possible security measure bypasses and our ability to detect a real threat actor to a certain extent, limited because the scope of a penetration test is usually extensive and Penetration testers don't care much about being loud or generating lots of alerts on security devices since time constraints on such projects often requires us to check the network in a short time..\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(25, \"img\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"div\", 3)(27, \"h2\", 16)(28, \"button\", 17);\n        i0.ɵɵtext(29, \" Advanced Persistent Threats and why Regular Pentesting is not enough: \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(30, \"div\", 18)(31, \"div\", 7);\n        i0.ɵɵtext(32, \"Even though the usual security methods we talked about help find many technical weaknesses, they still have some limits in fully getting a company ready to face a real attacker. These limits include: \");\n        i0.ɵɵelementStart(33, \"ul\")(34, \"li\");\n        i0.ɵɵtext(35, \"Time constraints\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(36, \"li\")(37, \"li\")(38, \"li\")(39, \"li\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(40, \" Budget Limited scope Non- disruptive Heavy IT focus Some aspects of penetration test might significantly differ from a real attack like; Penetration tests are loud: Pentesters don't try to stay quiet like real attackers do. They're okay with being easily spotted because their job is to find as many problems as they can in as many computers as possible. Non-Technical attack vectors might be overlooked: Things like tricking people or sneaking into buildings aren't usually checked in these tests. Relaxing of security mechanism: When doing a regular test, some safety measures might get turned off temporarily to make it easier for the testers. This might seem strange, but testers don't have a lot of time to look around. So, it's better to focus on finding big problems instead of trying to get around all the safety stuff. On the other hand, real attackers don't play fair and can do whatever they want. The scariest ones are called Advanced Persistent Threats (APTs). They're really good at what they do and can stay hidden in a network for a long time without anyone noticing. They mostly target important places like banks, government offices, and big companies. \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(41, \"div\", 3)(42, \"h2\", 19)(43, \"button\", 20);\n        i0.ɵɵtext(44, \" Red team Engagements: \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(45, \"div\", 21)(46, \"div\", 7);\n        i0.ɵɵtext(47, \"This is the fifth item's accordion body. You can modify it as needed. \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(48, \"div\", 3)(49, \"h2\", 22)(50, \"button\", 23);\n        i0.ɵɵtext(51, \" Teams and Functions of an engagments: \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(52, \"div\", 24)(53, \"div\", 7);\n        i0.ɵɵtext(54, \"This is the sixth item's accordion body. You can modify it as needed. \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(55, \"div\", 3)(56, \"h2\", 25)(57, \"button\", 26);\n        i0.ɵɵtext(58, \" Engagement Structure: \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(59, \"div\", 27)(60, \"div\", 7);\n        i0.ɵɵtext(61, \"This is the seventh item's accordion body. You can modify it as needed. \");\n        i0.ɵɵelementEnd()()()()()();\n      }\n    },\n    dependencies: [CommonModule],\n    styles: [\".cards[_ngcontent-%COMP%] {\\n    display: flex;\\n    flex-direction: row;\\n    justify-content: space-evenly;\\n    gap: 15px;\\n  }\\n  \\n  .cards[_ngcontent-%COMP%]   .red[_ngcontent-%COMP%] {\\n    background-color: #f43f5e;\\n  }\\n  \\n  .cards[_ngcontent-%COMP%]   .blue[_ngcontent-%COMP%] {\\n    background-color: #3b82f6;\\n  }\\n  \\n  .cards[_ngcontent-%COMP%]   .green[_ngcontent-%COMP%] {\\n    background-color: #22c55e;\\n  }\\n  .parent-margin[_ngcontent-%COMP%]{\\n    margin-top: 9rem;;\\n  }\\n  \\n  .cards[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%] {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    flex-direction: column;\\n    text-align: center;\\n    height: 150px;\\n    width: 500px;\\n    border-radius: 10px;\\n    color: white;\\n    cursor: pointer;\\n    transition: 400ms;\\n  }\\n  \\n  .cards[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%]   p.tip[_ngcontent-%COMP%] {\\n    font-size: 1em;\\n    font-weight: 700;\\n  }\\n  \\n  .cards[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%]   p.second-text[_ngcontent-%COMP%] {\\n    font-size: .7em;\\n  }\\n  \\n  .cards[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%]:hover {\\n    transform: scale(1.1, 1.1);\\n  }\\n  \\n  .cards[_ngcontent-%COMP%]:hover    > .card[_ngcontent-%COMP%]:not(:hover) {\\n    filter: blur(10px);\\n    transform: scale(0.9, 0.9);\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2hhcmVkL3JlZC10ZWFtL3JlZC10ZWFtLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLDZCQUE2QjtJQUM3QixTQUFTO0VBQ1g7O0VBRUE7SUFDRSx5QkFBeUI7RUFDM0I7O0VBRUE7SUFDRSx5QkFBeUI7RUFDM0I7O0VBRUE7SUFDRSx5QkFBeUI7RUFDM0I7RUFDQTtJQUNFLGdCQUFnQjtFQUNsQjs7RUFFQTtJQUNFLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsdUJBQXVCO0lBQ3ZCLHNCQUFzQjtJQUN0QixrQkFBa0I7SUFDbEIsYUFBYTtJQUNiLFlBQVk7SUFDWixtQkFBbUI7SUFDbkIsWUFBWTtJQUNaLGVBQWU7SUFDZixpQkFBaUI7RUFDbkI7O0VBRUE7SUFDRSxjQUFjO0lBQ2QsZ0JBQWdCO0VBQ2xCOztFQUVBO0lBQ0UsZUFBZTtFQUNqQjs7RUFFQTtJQUNFLDBCQUEwQjtFQUM1Qjs7RUFFQTtJQUNFLGtCQUFrQjtJQUNsQiwwQkFBMEI7RUFDNUIiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZHMge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcbiAgICBnYXA6IDE1cHg7XG4gIH1cbiAgXG4gIC5jYXJkcyAucmVkIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjQzZjVlO1xuICB9XG4gIFxuICAuY2FyZHMgLmJsdWUge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMzYjgyZjY7XG4gIH1cbiAgXG4gIC5jYXJkcyAuZ3JlZW4ge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMyMmM1NWU7XG4gIH1cbiAgLnBhcmVudC1tYXJnaW57XG4gICAgbWFyZ2luLXRvcDogOXJlbTs7XG4gIH1cbiAgXG4gIC5jYXJkcyAuY2FyZCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGhlaWdodDogMTUwcHg7XG4gICAgd2lkdGg6IDUwMHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICB0cmFuc2l0aW9uOiA0MDBtcztcbiAgfVxuICBcbiAgLmNhcmRzIC5jYXJkIHAudGlwIHtcbiAgICBmb250LXNpemU6IDFlbTtcbiAgICBmb250LXdlaWdodDogNzAwO1xuICB9XG4gIFxuICAuY2FyZHMgLmNhcmQgcC5zZWNvbmQtdGV4dCB7XG4gICAgZm9udC1zaXplOiAuN2VtO1xuICB9XG4gIFxuICAuY2FyZHMgLmNhcmQ6aG92ZXIge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4xLCAxLjEpO1xuICB9XG4gIFxuICAuY2FyZHM6aG92ZXIgPiAuY2FyZDpub3QoOmhvdmVyKSB7XG4gICAgZmlsdGVyOiBibHVyKDEwcHgpO1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMC45LCAwLjkpO1xuICB9Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["CommonModule","RedTeamComponent","constructor","redTeamItem","_","_2","selectors","standalone","features","i0","ɵɵStandaloneFeature","decls","vars","consts","template","RedTeamComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","styles"],"sources":["/Users/stuart/Documents/TRY-HACK-ME/src/app/shared/red-team/red-team.component.ts","/Users/stuart/Documents/TRY-HACK-ME/src/app/shared/red-team/red-team.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-red-team',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './red-team.component.html',\n  styleUrls: ['./red-team.component.css']\n})\nexport class RedTeamComponent {\n\n  redTeamItem = [\n    {\n      \"title\": \"Introduction\",\n      \"desc\": \"In the world of computers, there's a constant game between the good guys and the bad guys. Just like in a game of tag, the bad guys try to find ways to break into computer systems, and the good guys work hard to stop them. As the bad guys come up with new tricks, the good guys have to come up with new ways to protect against them. Sometimes, we use tests to check if our computers are safe from the bad guys. These tests are like quizzes for our computers. They help us find weaknesses in our defenses. But sometimes, these tests don't show us everything the bad guys could do. So they might not be enough to prepare us for a real attack from someone who's really determined to break in.\"\n    },\n    {\n      \"title\": \"Vulnerability assessments\",\n      \"desc\": \"In the world of computers, there's a constant game between the good guys and the bad guys. Just like in a game of tag, the bad guys try to find ways to break into computer systems, and the good guys work hard to stop them. As the bad guys come up with new tricks, the good guys have to come up with new ways to protect against them. Sometimes, we use tests to check if our computers are safe from the bad guys. These tests are like quizzes for our computers. They help us find weaknesses in our defenses. But sometimes, these tests don't show us everything the bad guys could do. So they might not be enough to prepare us for a real attack from someone who's really determined to break in.\"\n    },\n    {\n      \"title\": \"Penetration Testing:\",\n      \"desc\": \"In the world of computers, there's a constant game between the good guys and the bad guys. Just like in a game of tag, the bad guys try to find ways to break into computer systems, and the good guys work hard to stop them. As the bad guys come up with new tricks, the good guys have to come up with new ways to protect against them. Sometimes, we use tests to check if our computers are safe from the bad guys. These tests are like quizzes for our computers. They help us find weaknesses in our defenses. But sometimes, these tests don't show us everything the bad guys could do. So they might not be enough to prepare us for a real attack from someone who's really determined to break in.\"\n    },\n    {\n      \"title\": \"Advanced Persistent Threats and why Regular Pentesting is not enough:\",\n      \"desc\": \"In the world of computers, there's a constant game between the good guys and the bad guys. Just like in a game of tag, the bad guys try to find ways to break into computer systems, and the good guys work hard to stop them. As the bad guys come up with new tricks, the good guys have to come up with new ways to protect against them. Sometimes, we use tests to check if our computers are safe from the bad guys. These tests are like quizzes for our computers. They help us find weaknesses in our defenses. But sometimes, these tests don't show us everything the bad guys could do. So they might not be enough to prepare us for a real attack from someone who's really determined to break in.\"\n    },\n    {\n      \"title\": \"Red team Engagements:\",\n      \"desc\": \"In the world of computers, there's a constant game between the good guys and the bad guys. Just like in a game of tag, the bad guys try to find ways to break into computer systems, and the good guys work hard to stop them. As the bad guys come up with new tricks, the good guys have to come up with new ways to protect against them. Sometimes, we use tests to check if our computers are safe from the bad guys. These tests are like quizzes for our computers. They help us find weaknesses in our defenses. But sometimes, these tests don't show us everything the bad guys could do. So they might not be enough to prepare us for a real attack from someone who's really determined to break in.\"\n    },\n    {\n      \"title\": \"Teams and Functions of an engagments:\",\n      \"desc\": \"In the world of computers, there's a constant game between the good guys and the bad guys. Just like in a game of tag, the bad guys try to find ways to break into computer systems, and the good guys work hard to stop them. As the bad guys come up with new tricks, the good guys have to come up with new ways to protect against them. Sometimes, we use tests to check if our computers are safe from the bad guys. These tests are like quizzes for our computers. They help us find weaknesses in our defenses. But sometimes, these tests don't show us everything the bad guys could do. So they might not be enough to prepare us for a real attack from someone who's really determined to break in.\"\n    },\n    {\n      \"title\": \"\",\n      \"desc\": \"In the world of computers, there's a constant game between the good guys and the bad guys. Just like in a game of tag, the bad guys try to find ways to break into computer systems, and the good guys work hard to stop them. As the bad guys come up with new tricks, the good guys have to come up with new ways to protect against them. Sometimes, we use tests to check if our computers are safe from the bad guys. These tests are like quizzes for our computers. They help us find weaknesses in our defenses. But sometimes, these tests don't show us everything the bad guys could do. So they might not be enough to prepare us for a real attack from someone who's really determined to break in.\"\n    },\n\n\n  ]\n\n}\n","<div class=\"container \">\n    <div class=\"parent-margin\">\n\n        <div class=\"accordion accordion-flush\" id=\"accordionFlushExample\">\n\n            <div class=\"accordion-item\">\n                <h2 class=\"accordion-header\" id=\"flush-headingOne\">\n                    <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\"\n                        data-bs-target=\"#flush-collapseOne\" aria-expanded=\"false\" aria-controls=\"flush-collapseOne\">\n                        Introduction:\n                    </button>\n                </h2>\n                <div id=\"flush-collapseOne\" class=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingOne\"\n                    data-bs-parent=\"#accordionFlushExample\">\n                    <div class=\"accordion-body\">\n                        In the world of computers, there's a constant game between the good guys and the bad guys. Just\n                        like in a game of tag, the bad guys try to find ways to break into computer systems, and the\n                        good guys work hard to stop them. As the bad guys come up with new tricks, the good guys have to\n                        come up with new ways to protect against them.\n                        Sometimes, we use tests to check if our computers are safe from the bad guys. These tests are\n                        like quizzes for our computers. They help us find weaknesses in our defenses. But sometimes,\n                        these tests don't show us everything the bad guys could do. So they might not be enough to\n                        prepare us for a real attack from someone who's really determined to break in.\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"accordion-item\">\n                <h2 class=\"accordion-header\" id=\"flush-headingTwo\">\n                    <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\"\n                        data-bs-target=\"#flush-collapseTwo\" aria-expanded=\"false\" aria-controls=\"flush-collapseTwo\">\n                        Vulnerability assessments\n                    </button>\n                </h2>\n                <div id=\"flush-collapseTwo\" class=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingTwo\"\n                    data-bs-parent=\"#accordionFlushExample\">\n                    <div class=\"accordion-body\">This is the simplest form of security assessment, and its main objective\n                        is to identify as much vulnerability in as many systems in the network as possible. To this end,\n                        concessions may be made to meet this goal effectively. For example, the attacker's machine may\n                        be allowed listed on the available security solutions to avoid interfering with the\n                        vulnerability discovery process. This makes sense since the objective is to look at every host\n                        on the network and evaluate its security posture individually while providing the most\n                        information to the company about where to focus its remediation efforts.\n                        In simple words, a vulnerability check looks at each computer by itself to find problems. This\n                        helps us figure out what needs fixing first to keep our network safe from bad guys. We mostly\n                        use tools that do this automatically, so anyone can do it without needing to know a lot about\n                        computers..</div>\n                    <img src=\"../../../assets/images/image.png\" alt=\"\" class=\"img-fluid\">\n                </div>\n            </div>\n\n            <div class=\"accordion-item\">\n                <h2 class=\"accordion-header\" id=\"flush-headingThree\">\n                    <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\"\n                        data-bs-target=\"#flush-collapseThree\" aria-expanded=\"false\" aria-controls=\"flush-collapseThree\">\n                        Penetration Testing:\n                    </button>\n                </h2>\n                <div id=\"flush-collapseThree\" class=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingThree\"\n                    data-bs-parent=\"#accordionFlushExample\">\n                    <div class=\"accordion-body\">On top of scanning every single host for vulnerabilities, we often need\n                        to understand how they impact our network as a whole. Penetration tests add to vulnerability\n                        assessments by allowing the pentester to explore the impact of an attacker on the overall\n                        network by doing additional steps that include:\n                        Trying to take advantage of the weaknesses found on each system is crucial. Sometimes, a\n                        weakness might be there, but other protections stop it from being used by bad actors. This also\n                        helps us check if we can use the found weaknesses to get into a particular computer.\n                        After breaking into a computer, we do more tasks to see if we can get any useful information\n                        from it or if we can use it to get into other computers that we couldn't reach before.\n                        Penetration tests might start by scanning for vulnerabilities just as a regular vulnerability\n                        assessment but provide further information on how an attacker can chain vulnerabilities to\n                        achieve specific goals. While its focus remains on identifying vulnerabilities and establishing\n                        measures to protect the network, it also considers the network as a whole ecosystem and how an\n                        attacker could profit from interactions between its components.\n                        By analyzing how an attacker could move around our network, we also gain a basic insight on\n                        possible security measure bypasses and our ability to detect a real threat actor to a certain\n                        extent, limited because the scope of a penetration test is usually extensive and Penetration\n                        testers don't care much about being loud or generating lots of alerts on security devices since\n                        time constraints on such projects often requires us to check the network in a short time..</div>\n                </div>\n                <img src=\"../../../assets/images/penetrationTesting.png\" alt=\"\" class=\"img-fluid\">\n\n            </div>\n\n            <!-- Repeat for items 4-7 -->\n\n            <div class=\"accordion-item\">\n                <h2 class=\"accordion-header\" id=\"flush-headingFour\">\n                    <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\"\n                        data-bs-target=\"#flush-collapseFour\" aria-expanded=\"false\" aria-controls=\"flush-collapseFour\">\n                        Advanced Persistent Threats and why Regular Pentesting is not enough:\n                    </button>\n                </h2>\n                <div id=\"flush-collapseFour\" class=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingFour\"\n                    data-bs-parent=\"#accordionFlushExample\">\n                    <div class=\"accordion-body\">Even though the usual security methods we talked about help find many\n                        technical weaknesses, they still have some limits in fully getting a company ready to face a\n                        real attacker. These limits include:\n                        <ul>\n                            <li>Time constraints</li>\n                            <li></li>\n                            <li></li>\n                            <li></li>\n                            <li></li>\n                        </ul>\n                        \n                        Budget\n                        Limited scope\n                        Non- disruptive\n                        Heavy IT focus\n\n                        Some aspects of penetration test might significantly differ from a real attack like;\n                        Penetration tests are loud: Pentesters don't try to stay quiet like real attackers do. They're\n                        okay with being easily spotted because their job is to find as many problems as they can in as\n                        many computers as possible.\n                        Non-Technical attack vectors might be overlooked: Things like tricking people or sneaking into\n                        buildings aren't usually checked in these tests.\n                        Relaxing of security mechanism: When doing a regular test, some safety measures might get turned\n                        off temporarily to make it easier for the testers. This might seem strange, but testers don't\n                        have a lot of time to look around. So, it's better to focus on finding big problems instead of\n                        trying to get around all the safety stuff.\n                        On the other hand, real attackers don't play fair and can do whatever they want. The scariest\n                        ones are called Advanced Persistent Threats (APTs). They're really good at what they do and can\n                        stay hidden in a network for a long time without anyone noticing. They mostly target important\n                        places like banks, government offices, and big companies.\n\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"accordion-item\">\n                <h2 class=\"accordion-header\" id=\"flush-headingFive\">\n                    <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\"\n                        data-bs-target=\"#flush-collapseFive\" aria-expanded=\"false\" aria-controls=\"flush-collapseFive\">\n                        Red team Engagements:\n                    </button>\n                </h2>\n                <div id=\"flush-collapseFive\" class=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingFive\"\n                    data-bs-parent=\"#accordionFlushExample\">\n                    <div class=\"accordion-body\">This is the fifth item's accordion body. You can modify it as needed.\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"accordion-item\">\n                <h2 class=\"accordion-header\" id=\"flush-headingSix\">\n                    <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\"\n                        data-bs-target=\"#flush-collapseSix\" aria-expanded=\"false\" aria-controls=\"flush-collapseSix\">\n                        Teams and Functions of an engagments:\n                    </button>\n                </h2>\n                <div id=\"flush-collapseSix\" class=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingSix\"\n                    data-bs-parent=\"#accordionFlushExample\">\n                    <div class=\"accordion-body\">This is the sixth item's accordion body. You can modify it as needed.\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"accordion-item\">\n                <h2 class=\"accordion-header\" id=\"flush-headingSeven\">\n                    <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\"\n                        data-bs-target=\"#flush-collapseSeven\" aria-expanded=\"false\" aria-controls=\"flush-collapseSeven\">\n                        Engagement Structure:\n                    </button>\n                </h2>\n                <div id=\"flush-collapseSeven\" class=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingSeven\"\n                    data-bs-parent=\"#accordionFlushExample\">\n                    <div class=\"accordion-body\">This is the seventh item's accordion body. You can modify it as needed.\n                    </div>\n                </div>\n            </div>\n\n        </div>\n\n    </div>\n\n</div>"],"mappings":"AACA,SAASA,YAAY,QAAQ,iBAAiB;;AAS9C,OAAM,MAAOC,gBAAgB;EAP7BC,YAAA;IASE,KAAAC,WAAW,GAAG,CACZ;MACE,OAAO,EAAE,cAAc;MACvB,MAAM,EAAE;KACT,EACD;MACE,OAAO,EAAE,2BAA2B;MACpC,MAAM,EAAE;KACT,EACD;MACE,OAAO,EAAE,sBAAsB;MAC/B,MAAM,EAAE;KACT,EACD;MACE,OAAO,EAAE,uEAAuE;MAChF,MAAM,EAAE;KACT,EACD;MACE,OAAO,EAAE,uBAAuB;MAChC,MAAM,EAAE;KACT,EACD;MACE,OAAO,EAAE,uCAAuC;MAChD,MAAM,EAAE;KACT,EACD;MACE,OAAO,EAAE,EAAE;MACX,MAAM,EAAE;KACT,CAGF;;EAEF,QAAAC,CAAA,G;qBAnCYH,gBAAgB;EAAA;EAAA,QAAAI,EAAA,G;UAAhBJ,gBAAgB;IAAAK,SAAA;IAAAC,UAAA;IAAAC,QAAA,GAAAC,EAAA,CAAAC,mBAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCV7BP,EAAA,CAAAS,cAAA,aAAwB;QASAT,EAAA,CAAAU,MAAA,sBACJ;QAAAV,EAAA,CAAAW,YAAA,EAAS;QAEbX,EAAA,CAAAS,cAAA,aAC4C;QAEpCT,EAAA,CAAAU,MAAA,0rBAQJ;QAAAV,EAAA,CAAAW,YAAA,EAAM;QAIdX,EAAA,CAAAS,cAAA,cAA4B;QAIhBT,EAAA,CAAAU,MAAA,mCACJ;QAAAV,EAAA,CAAAW,YAAA,EAAS;QAEbX,EAAA,CAAAS,cAAA,eAC4C;QACZT,EAAA,CAAAU,MAAA,04BAUb;QAAAV,EAAA,CAAAW,YAAA,EAAM;QACrBX,EAAA,CAAAY,SAAA,eAAqE;QACzEZ,EAAA,CAAAW,YAAA,EAAM;QAGVX,EAAA,CAAAS,cAAA,cAA4B;QAIhBT,EAAA,CAAAU,MAAA,8BACJ;QAAAV,EAAA,CAAAW,YAAA,EAAS;QAEbX,EAAA,CAAAS,cAAA,eAC4C;QACZT,EAAA,CAAAU,MAAA,koDAkBkE;QAAAV,EAAA,CAAAW,YAAA,EAAM;QAExGX,EAAA,CAAAY,SAAA,eAAkF;QAEtFZ,EAAA,CAAAW,YAAA,EAAM;QAINX,EAAA,CAAAS,cAAA,cAA4B;QAIhBT,EAAA,CAAAU,MAAA,+EACJ;QAAAV,EAAA,CAAAW,YAAA,EAAS;QAEbX,EAAA,CAAAS,cAAA,eAC4C;QACZT,EAAA,CAAAU,MAAA,gNAGxB;QAAAV,EAAA,CAAAS,cAAA,UAAI;QACIT,EAAA,CAAAU,MAAA,wBAAgB;QAAAV,EAAA,CAAAW,YAAA,EAAK;QACzBX,EAAA,CAAAY,SAAA,UAAS;QAIbZ,EAAA,CAAAW,YAAA,EAAK;QAELX,EAAA,CAAAU,MAAA,4pCAoBJ;QAAAV,EAAA,CAAAW,YAAA,EAAM;QAIdX,EAAA,CAAAS,cAAA,cAA4B;QAIhBT,EAAA,CAAAU,MAAA,+BACJ;QAAAV,EAAA,CAAAW,YAAA,EAAS;QAEbX,EAAA,CAAAS,cAAA,eAC4C;QACZT,EAAA,CAAAU,MAAA,8EAC5B;QAAAV,EAAA,CAAAW,YAAA,EAAM;QAIdX,EAAA,CAAAS,cAAA,cAA4B;QAIhBT,EAAA,CAAAU,MAAA,+CACJ;QAAAV,EAAA,CAAAW,YAAA,EAAS;QAEbX,EAAA,CAAAS,cAAA,eAC4C;QACZT,EAAA,CAAAU,MAAA,8EAC5B;QAAAV,EAAA,CAAAW,YAAA,EAAM;QAIdX,EAAA,CAAAS,cAAA,cAA4B;QAIhBT,EAAA,CAAAU,MAAA,+BACJ;QAAAV,EAAA,CAAAW,YAAA,EAAS;QAEbX,EAAA,CAAAS,cAAA,eAC4C;QACZT,EAAA,CAAAU,MAAA,gFAC5B;QAAAV,EAAA,CAAAW,YAAA,EAAM;;;mBDlKdpB,YAAY;IAAAsB,MAAA;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}